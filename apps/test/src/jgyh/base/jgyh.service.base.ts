/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Jgyh } from "@prisma/client";

export class JgyhServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.JgyhCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.JgyhCountArgs>
  ): Promise<number> {
    return this.prisma.jgyh.count(args);
  }

  async jgyhs<T extends Prisma.JgyhFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.JgyhFindManyArgs>
  ): Promise<Jgyh[]> {
    return this.prisma.jgyh.findMany(args);
  }
  async jgyh<T extends Prisma.JgyhFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.JgyhFindUniqueArgs>
  ): Promise<Jgyh | null> {
    return this.prisma.jgyh.findUnique(args);
  }
  async createJgyh<T extends Prisma.JgyhCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JgyhCreateArgs>
  ): Promise<Jgyh> {
    return this.prisma.jgyh.create<T>(args);
  }
  async updateJgyh<T extends Prisma.JgyhUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JgyhUpdateArgs>
  ): Promise<Jgyh> {
    return this.prisma.jgyh.update<T>(args);
  }
  async deleteJgyh<T extends Prisma.JgyhDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.JgyhDeleteArgs>
  ): Promise<Jgyh> {
    return this.prisma.jgyh.delete(args);
  }
}
